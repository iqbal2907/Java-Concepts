/**
 * A class i.e. created inside a method is called local inner class in java. 
 * If you want to invoke the methods of local inner class, you must instantiate 
 * this class inside the method.
 * 
 * 1) Local inner class cannot be invoked from outside the method.
 * 2) Local inner class cannot access non-final local variable till JDK 1.7. 
 * Since JDK 1.8, it is possible to access the non-final local variable in local inner class.
 */
package com.concept.innerclass;

public class TestLocalInner {
	private int data = 30;// instance variable
	void display() {
		class Local {
			void msg() {
				System.out.println(data);
			}
		}
		Local l = new Local();
		l.msg();
	}
	public static void main(String args[]) {
		TestLocalInner obj = new TestLocalInner();
		obj.display();
	}
}

//Internal class generated by the compiler

/*

	import java.io.PrintStream;  
	class localInner1$Local  
	{  
	    final localInner1 this$0;  
	    localInner1$Local()  
	    {     
	        super();  
	        this$0 = Simple.this;  
	    }  
	    void msg()  
	    {  
	        System.out.println(localInner1.access$000(localInner1.this));  
	    }  
	}  

*/


// Example of local inner class with local variable

class localInner2 {
	void display() {
		int value = 50;// local variable must be final till jdk 1.7 only
		class Local {
			void msg() {
				System.out.println(value);
			}
		}
		Local l = new Local();
		l.msg();
	}
	public static void main(String args[]) {
		localInner2 obj = new localInner2();
		obj.display();
	}
}